Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: STRING
    3    | INT
    4    | NIL
    5    | MINUS exp
    6    | lvalue
    7    | lvalue ASSIGN exp
    8    | exp PLUS exp
    9    | exp MINUS exp
   10    | exp TIMES exp
   11    | exp DIVIDE exp
   12    | exp EQ exp
   13    | exp NEQ exp
   14    | exp LT exp
   15    | exp LE exp
   16    | exp GT exp
   17    | exp GE exp
   18    | exp AND exp
   19    | exp OR exp
   20    | ID LPAREN exp_list RPAREN
   21    | LPAREN exp_seq RPAREN
   22    | ID LBRACE field_list RBRACE
   23    | ID LBRACK exp RBRACK OF exp
   24    | IF exp THEN exp
   25    | IF exp THEN exp ELSE exp
   26    | WHILE exp DO exp
   27    | FOR ID ASSIGN exp TO exp DO exp
   28    | BREAK
   29    | LET decl_list IN exp_seq END

   30 lvalue: ID
   31       | lvalue DOT ID
   32       | lvalue LBRACK exp RBRACK
   33       | ID LBRACK exp RBRACK

   34 exp_list: ε
   35         | exp
   36         | exp_list COMMA exp

   37 exp_seq: exp
   38        | exp SEMICOLON exp_seq

   39 field_list: ID EQ exp
   40           | field_list COMMA ID EQ exp

   41 decl: type_decl
   42     | var_decl
   43     | function_decl

   44 decl_list: decl
   45          | decl_list decl

   46 type_decl: TYPE ID EQ types

   47 types: ID
   48      | LBRACE type_fields RBRACE
   49      | ARRAY OF ID

   50 type_fields: type_field
   51            | type_fields COMMA type_field

   52 type_field: ε
   53           | ID COLON ID

   54 var_decl: VAR ID ASSIGN exp
   55         | VAR ID COLON ID ASSIGN exp

   56 function_decl: FUNCTION ID LPAREN type_fields RPAREN EQ exp
   57              | FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 20 22 23 27 30 31 33 39 40 46 47 49 53 54 55 56 57
    STRING <sval> (259) 2
    INT <ival> (260) 3
    COMMA (261) 36 40 51
    COLON (262) 53 55 57
    SEMICOLON (263) 38
    LPAREN (264) 20 21 56 57
    RPAREN (265) 20 21 56 57
    LBRACK (266) 23 32 33
    RBRACK (267) 23 32 33
    LBRACE (268) 22 48
    RBRACE (269) 22 48
    DOT (270) 31
    PLUS (271) 8
    MINUS (272) 5 9
    TIMES (273) 10
    DIVIDE (274) 11
    EQ (275) 12 39 40 46 56 57
    NEQ (276) 13
    LT (277) 14
    LE (278) 15
    GT (279) 16
    GE (280) 17
    AND (281) 18
    OR (282) 19
    ASSIGN (283) 7 27 54 55
    ARRAY (284) 49
    IF (285) 24 25
    THEN (286) 24 25
    ELSE (287) 25
    WHILE (288) 26
    FOR (289) 27
    TO (290) 27
    DO (291) 26 27
    LET (292) 29
    IN (293) 29
    END (294) 29
    OF (295) 23 49
    BREAK (296) 28
    NIL (297) 4
    FUNCTION (298) 56 57
    VAR (299) 54 55
    TYPE (300) 46
    UMINUS (301)
    IFX (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    exp (50)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 1 5 7 8 9 10 11 12 13 14 15 16 17 18 19 23 24 25 26 27 32 33 35 36 37 38 39 40 54 55 56 57
    lvalue (51)
        on left: 30 31 32 33
        on right: 6 7 31 32
    exp_list (52)
        on left: 34 35 36
        on right: 20 36
    exp_seq (53)
        on left: 37 38
        on right: 21 29 38
    field_list (54)
        on left: 39 40
        on right: 22 40
    decl (55)
        on left: 41 42 43
        on right: 44 45
    decl_list (56)
        on left: 44 45
        on right: 29 45
    type_decl (57)
        on left: 46
        on right: 41
    types (58)
        on left: 47 48 49
        on right: 46
    type_fields (59)
        on left: 50 51
        on right: 48 51 56 57
    type_field (60)
        on left: 52 53
        on right: 50 51
    var_decl (61)
        on left: 54 55
        on right: 42
    function_decl (62)
        on left: 56 57
        on right: 43


State 0

    0 $accept: • program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


State 1

   20 exp: ID • LPAREN exp_list RPAREN
   22    | ID • LBRACE field_list RBRACE
   23    | ID • LBRACK exp RBRACK OF exp
   30 lvalue: ID •
   33       | ID • LBRACK exp RBRACK

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    $default  reduce using rule 30 (lvalue)


State 2

    2 exp: STRING •

    $default  reduce using rule 2 (exp)


State 3

    3 exp: INT •

    $default  reduce using rule 3 (exp)


State 4

   21 exp: LPAREN • exp_seq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 18
    lvalue   go to state 14
    exp_seq  go to state 19


State 5

    5 exp: MINUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14


State 6

   24 exp: IF • exp THEN exp
   25    | IF • exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


State 7

   26 exp: WHILE • exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


State 8

   27 exp: FOR • ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


State 9

   29 exp: LET • decl_list IN exp_seq END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    decl           go to state 27
    decl_list      go to state 28
    type_decl      go to state 29
    var_decl       go to state 30
    function_decl  go to state 31


State 10

   28 exp: BREAK •

    $default  reduce using rule 28 (exp)


State 11

    4 exp: NIL •

    $default  reduce using rule 4 (exp)


State 12

    0 $accept: program • $end

    $end  shift, and go to state 32


State 13

    1 program: exp •
    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 1 (program)


State 14

    6 exp: lvalue •
    7    | lvalue • ASSIGN exp
   31 lvalue: lvalue • DOT ID
   32       | lvalue • LBRACK exp RBRACK

    LBRACK  shift, and go to state 45
    DOT     shift, and go to state 46
    ASSIGN  shift, and go to state 47

    $default  reduce using rule 6 (exp)


State 15

   20 exp: ID LPAREN • exp_list RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 34 (exp_list)

    exp       go to state 48
    lvalue    go to state 14
    exp_list  go to state 49


State 16

   23 exp: ID LBRACK • exp RBRACK OF exp
   33 lvalue: ID LBRACK • exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 50
    lvalue  go to state 14


State 17

   22 exp: ID LBRACE • field_list RBRACE

    ID  shift, and go to state 51

    field_list  go to state 52


State 18

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   37 exp_seq: exp •
   38        | exp • SEMICOLON exp_seq

    SEMICOLON  shift, and go to state 53
    PLUS       shift, and go to state 33
    MINUS      shift, and go to state 34
    TIMES      shift, and go to state 35
    DIVIDE     shift, and go to state 36
    EQ         shift, and go to state 37
    NEQ        shift, and go to state 38
    LT         shift, and go to state 39
    LE         shift, and go to state 40
    GT         shift, and go to state 41
    GE         shift, and go to state 42
    AND        shift, and go to state 43
    OR         shift, and go to state 44

    $default  reduce using rule 37 (exp_seq)


State 19

   21 exp: LPAREN exp_seq • RPAREN

    RPAREN  shift, and go to state 54


State 20

    5 exp: MINUS exp •
    8    | exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    $default  reduce using rule 5 (exp)


State 21

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   24    | IF exp • THEN exp
   25    | IF exp • THEN exp ELSE exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    THEN    shift, and go to state 55


State 22

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   26    | WHILE exp • DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    DO      shift, and go to state 56


State 23

   27 exp: FOR ID • ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 57


State 24

   56 function_decl: FUNCTION • ID LPAREN type_fields RPAREN EQ exp
   57              | FUNCTION • ID LPAREN type_fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 58


State 25

   54 var_decl: VAR • ID ASSIGN exp
   55         | VAR • ID COLON ID ASSIGN exp

    ID  shift, and go to state 59


State 26

   46 type_decl: TYPE • ID EQ types

    ID  shift, and go to state 60


State 27

   44 decl_list: decl •

    $default  reduce using rule 44 (decl_list)


State 28

   29 exp: LET decl_list • IN exp_seq END
   45 decl_list: decl_list • decl

    IN        shift, and go to state 61
    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    decl           go to state 62
    type_decl      go to state 29
    var_decl       go to state 30
    function_decl  go to state 31


State 29

   41 decl: type_decl •

    $default  reduce using rule 41 (decl)


State 30

   42 decl: var_decl •

    $default  reduce using rule 42 (decl)


State 31

   43 decl: function_decl •

    $default  reduce using rule 43 (decl)


State 32

    0 $accept: program $end •

    $default  accept


State 33

    8 exp: exp PLUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 63
    lvalue  go to state 14


State 34

    9 exp: exp MINUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 64
    lvalue  go to state 14


State 35

   10 exp: exp TIMES • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 65
    lvalue  go to state 14


State 36

   11 exp: exp DIVIDE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    lvalue  go to state 14


State 37

   12 exp: exp EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    lvalue  go to state 14


State 38

   13 exp: exp NEQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    lvalue  go to state 14


State 39

   14 exp: exp LT • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    lvalue  go to state 14


State 40

   15 exp: exp LE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    lvalue  go to state 14


State 41

   16 exp: exp GT • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14


State 42

   17 exp: exp GE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    lvalue  go to state 14


State 43

   18 exp: exp AND • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14


State 44

   19 exp: exp OR • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


State 45

   32 lvalue: lvalue LBRACK • exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


State 46

   31 lvalue: lvalue DOT • ID

    ID  shift, and go to state 76


State 47

    7 exp: lvalue ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


State 48

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   35 exp_list: exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 35 (exp_list)


State 49

   20 exp: ID LPAREN exp_list • RPAREN
   36 exp_list: exp_list • COMMA exp

    COMMA   shift, and go to state 78
    RPAREN  shift, and go to state 79


State 50

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   23    | ID LBRACK exp • RBRACK OF exp
   33 lvalue: ID LBRACK exp • RBRACK

    RBRACK  shift, and go to state 80
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44


State 51

   39 field_list: ID • EQ exp

    EQ  shift, and go to state 81


State 52

   22 exp: ID LBRACE field_list • RBRACE
   40 field_list: field_list • COMMA ID EQ exp

    COMMA   shift, and go to state 82
    RBRACE  shift, and go to state 83


State 53

   38 exp_seq: exp SEMICOLON • exp_seq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 18
    lvalue   go to state 14
    exp_seq  go to state 84


State 54

   21 exp: LPAREN exp_seq RPAREN •

    $default  reduce using rule 21 (exp)


State 55

   24 exp: IF exp THEN • exp
   25    | IF exp THEN • exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 85
    lvalue  go to state 14


State 56

   26 exp: WHILE exp DO • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 86
    lvalue  go to state 14


State 57

   27 exp: FOR ID ASSIGN • exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14


State 58

   56 function_decl: FUNCTION ID • LPAREN type_fields RPAREN EQ exp
   57              | FUNCTION ID • LPAREN type_fields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 88


State 59

   54 var_decl: VAR ID • ASSIGN exp
   55         | VAR ID • COLON ID ASSIGN exp

    COLON   shift, and go to state 89
    ASSIGN  shift, and go to state 90


State 60

   46 type_decl: TYPE ID • EQ types

    EQ  shift, and go to state 91


State 61

   29 exp: LET decl_list IN • exp_seq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 18
    lvalue   go to state 14
    exp_seq  go to state 92


State 62

   45 decl_list: decl_list decl •

    $default  reduce using rule 45 (decl_list)


State 63

    8 exp: exp • PLUS exp
    8    | exp PLUS exp •
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 8 (exp)


State 64

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
    9    | exp MINUS exp •
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 9 (exp)


State 65

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   10    | exp TIMES exp •
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    $default  reduce using rule 10 (exp)


State 66

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   11    | exp DIVIDE exp •
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    $default  reduce using rule 11 (exp)


State 67

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   12    | exp EQ exp •
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 12 (exp)


State 68

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   13    | exp NEQ exp •
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 13 (exp)


State 69

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   14    | exp LT exp •
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 14 (exp)


State 70

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   15    | exp LE exp •
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 15 (exp)


State 71

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   16    | exp GT exp •
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 16 (exp)


State 72

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   17    | exp GE exp •
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 17 (exp)


State 73

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   18    | exp AND exp •
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42

    $default  reduce using rule 18 (exp)


State 74

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   19    | exp OR exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42

    $default  reduce using rule 19 (exp)


State 75

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   32 lvalue: lvalue LBRACK exp • RBRACK

    RBRACK  shift, and go to state 93
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44


State 76

   31 lvalue: lvalue DOT ID •

    $default  reduce using rule 31 (lvalue)


State 77

    7 exp: lvalue ASSIGN exp •
    8    | exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 7 (exp)


State 78

   36 exp_list: exp_list COMMA • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 94
    lvalue  go to state 14


State 79

   20 exp: ID LPAREN exp_list RPAREN •

    $default  reduce using rule 20 (exp)


State 80

   23 exp: ID LBRACK exp RBRACK • OF exp
   33 lvalue: ID LBRACK exp RBRACK •

    OF  shift, and go to state 95

    $default  reduce using rule 33 (lvalue)


State 81

   39 field_list: ID EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 96
    lvalue  go to state 14


State 82

   40 field_list: field_list COMMA • ID EQ exp

    ID  shift, and go to state 97


State 83

   22 exp: ID LBRACE field_list RBRACE •

    $default  reduce using rule 22 (exp)


State 84

   38 exp_seq: exp SEMICOLON exp_seq •

    $default  reduce using rule 38 (exp_seq)


State 85

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   24    | IF exp THEN exp •
   25    | IF exp THEN exp • ELSE exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    ELSE    shift, and go to state 98

    $default  reduce using rule 24 (exp)


State 86

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   26    | WHILE exp DO exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 26 (exp)


State 87

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   27    | FOR ID ASSIGN exp • TO exp DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    TO      shift, and go to state 99


State 88

   56 function_decl: FUNCTION ID LPAREN • type_fields RPAREN EQ exp
   57              | FUNCTION ID LPAREN • type_fields RPAREN COLON ID EQ exp

    ID  shift, and go to state 100

    $default  reduce using rule 52 (type_field)

    type_fields  go to state 101
    type_field   go to state 102


State 89

   55 var_decl: VAR ID COLON • ID ASSIGN exp

    ID  shift, and go to state 103


State 90

   54 var_decl: VAR ID ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 104
    lvalue  go to state 14


State 91

   46 type_decl: TYPE ID EQ • types

    ID      shift, and go to state 105
    LBRACE  shift, and go to state 106
    ARRAY   shift, and go to state 107

    types  go to state 108


State 92

   29 exp: LET decl_list IN exp_seq • END

    END  shift, and go to state 109


State 93

   32 lvalue: lvalue LBRACK exp RBRACK •

    $default  reduce using rule 32 (lvalue)


State 94

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   36 exp_list: exp_list COMMA exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 36 (exp_list)


State 95

   23 exp: ID LBRACK exp RBRACK OF • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 110
    lvalue  go to state 14


State 96

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   39 field_list: ID EQ exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 39 (field_list)


State 97

   40 field_list: field_list COMMA ID • EQ exp

    EQ  shift, and go to state 111


State 98

   25 exp: IF exp THEN exp ELSE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 112
    lvalue  go to state 14


State 99

   27 exp: FOR ID ASSIGN exp TO • exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 113
    lvalue  go to state 14


State 100

   53 type_field: ID • COLON ID

    COLON  shift, and go to state 114


State 101

   51 type_fields: type_fields • COMMA type_field
   56 function_decl: FUNCTION ID LPAREN type_fields • RPAREN EQ exp
   57              | FUNCTION ID LPAREN type_fields • RPAREN COLON ID EQ exp

    COMMA   shift, and go to state 115
    RPAREN  shift, and go to state 116


State 102

   50 type_fields: type_field •

    $default  reduce using rule 50 (type_fields)


State 103

   55 var_decl: VAR ID COLON ID • ASSIGN exp

    ASSIGN  shift, and go to state 117


State 104

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   54 var_decl: VAR ID ASSIGN exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 54 (var_decl)


State 105

   47 types: ID •

    $default  reduce using rule 47 (types)


State 106

   48 types: LBRACE • type_fields RBRACE

    ID  shift, and go to state 100

    $default  reduce using rule 52 (type_field)

    type_fields  go to state 118
    type_field   go to state 102


State 107

   49 types: ARRAY • OF ID

    OF  shift, and go to state 119


State 108

   46 type_decl: TYPE ID EQ types •

    $default  reduce using rule 46 (type_decl)


State 109

   29 exp: LET decl_list IN exp_seq END •

    $default  reduce using rule 29 (exp)


State 110

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   23    | ID LBRACK exp RBRACK OF exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 23 (exp)


State 111

   40 field_list: field_list COMMA ID EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 120
    lvalue  go to state 14


State 112

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   25    | IF exp THEN exp ELSE exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 25 (exp)


State 113

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   27    | FOR ID ASSIGN exp TO exp • DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    DO      shift, and go to state 121


State 114

   53 type_field: ID COLON • ID

    ID  shift, and go to state 122


State 115

   51 type_fields: type_fields COMMA • type_field

    ID  shift, and go to state 100

    $default  reduce using rule 52 (type_field)

    type_field  go to state 123


State 116

   56 function_decl: FUNCTION ID LPAREN type_fields RPAREN • EQ exp
   57              | FUNCTION ID LPAREN type_fields RPAREN • COLON ID EQ exp

    COLON  shift, and go to state 124
    EQ     shift, and go to state 125


State 117

   55 var_decl: VAR ID COLON ID ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 126
    lvalue  go to state 14


State 118

   48 types: LBRACE type_fields • RBRACE
   51 type_fields: type_fields • COMMA type_field

    COMMA   shift, and go to state 115
    RBRACE  shift, and go to state 127


State 119

   49 types: ARRAY OF • ID

    ID  shift, and go to state 128


State 120

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   40 field_list: field_list COMMA ID EQ exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 40 (field_list)


State 121

   27 exp: FOR ID ASSIGN exp TO exp DO • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 129
    lvalue  go to state 14


State 122

   53 type_field: ID COLON ID •

    $default  reduce using rule 53 (type_field)


State 123

   51 type_fields: type_fields COMMA type_field •

    $default  reduce using rule 51 (type_fields)


State 124

   57 function_decl: FUNCTION ID LPAREN type_fields RPAREN COLON • ID EQ exp

    ID  shift, and go to state 130


State 125

   56 function_decl: FUNCTION ID LPAREN type_fields RPAREN EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 131
    lvalue  go to state 14


State 126

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   55 var_decl: VAR ID COLON ID ASSIGN exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 55 (var_decl)


State 127

   48 types: LBRACE type_fields RBRACE •

    $default  reduce using rule 48 (types)


State 128

   49 types: ARRAY OF ID •

    $default  reduce using rule 49 (types)


State 129

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   27    | FOR ID ASSIGN exp TO exp DO exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 27 (exp)


State 130

   57 function_decl: FUNCTION ID LPAREN type_fields RPAREN COLON ID • EQ exp

    EQ  shift, and go to state 132


State 131

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   56 function_decl: FUNCTION ID LPAREN type_fields RPAREN EQ exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 56 (function_decl)


State 132

   57 function_decl: FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 133
    lvalue  go to state 14


State 133

    8 exp: exp • PLUS exp
    9    | exp • MINUS exp
   10    | exp • TIMES exp
   11    | exp • DIVIDE exp
   12    | exp • EQ exp
   13    | exp • NEQ exp
   14    | exp • LT exp
   15    | exp • LE exp
   16    | exp • GT exp
   17    | exp • GE exp
   18    | exp • AND exp
   19    | exp • OR exp
   57 function_decl: FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ exp •

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 57 (function_decl)
